{
    "collab_server" : "",
    "contents" : "\n# Packages in R ----------------------------------------------------------------\n# Install the package named \"dplyr\"\ninstall.packages(\"dplyr\")\n# Install the packages named \"haven\" and \"readr\"\ninstall.packages(c(\"haven\", \"readr\"))\n# Loading packages\nlibrary(dplyr)\nlibrary(haven)\nlibrary(readr)\n\n# Package management with 'pacman' ---------------------------------------------\n# Install the 'pacman' package\ninstall.packages(\"pacman\")\n# Load the 'pacman' package\nlibrary(pacman)\n# p_load examples\np_load(dplyr, haven, readr)\np_load(ggplot2)\n\n# File directories -------------------------------------------------------------\n# File paths and navigation\nsetwd(\"/Users/edwardarubin/Dropbox/Teaching/ARE212\")\ngetwd()\n# The current directory\ngetwd()\n# Move up one level\nsetwd(\"..\")\n# Check the directory now\ngetwd()\n# Go home\nsetwd(\"~\")\n# Check the new working directory\ngetwd()\n# Now return to my ARE212 folder\nsetwd(\"Dropbox/Teaching/ARE212\")\n# Check the working directory\ngetwd()\n# The path to my ARE 212 folder (ARE212)\ndir_class <- \"/Users/edwardarubin/Dropbox/Teaching/ARE212/\"\n# The path to my section 1 folder (Section01), which is inside my ARE 212 folder\ndir_section1 <- paste0(dir_class, \"Section01/\")\n# Default use of paste0()\npaste0(1, 2, 3)\n# Default use of paste()\npaste(1, 2, 3)\n# Setting the separation parameter to \" \" (the default)\npaste(1, 2, 3, sep = \" \")\n# Changing the separation parameter to \"+\"\npaste(1, 2, 3, sep = \"+\")\n# The object 'dir_class'\ndir_class\n# The character vector\n\"Section01/\"\n# Paste them together\npaste0(dir_class, \"Section01/\")\n# Look inside my ARE212 folder (dir_class stores the path)\ndir(dir_class)\n# Look inside my section 1 folder (dir_section1 stores the path)\ndir(dir_section1)\ndir_section1\n# The object\ndir(dir_section1)\n# The object's value\ndir(\"/Users/edwardarubin/Dropbox/Teaching/ARE212/Section01/\")\n\n# Loading files ----------------------------------------------------------------\n# Load the .dta file\ncar_data <- read_dta(paste0(dir_section1, \"auto.dta\"))\n# Check the loaded data\ncar_data\n# Load the .csv file\ncar_data <- read_csv(paste0(dir_section1, \"auto.csv\"))\n# See that it looks the same as above\ncar_data\n# Load the CSV\nread_csv(\"Section01/auto.csv\")\n\n# Playing with data ------------------------------------------------------------\n# Print the data into the console again\ncar_data\n# Variable names\nnames(car_data)\n# First six observations\nhead(car_data)\n# First eleven observations\nhead(car_data, n = 11)\n# Last seven observations\ntail(car_data, n = 7)\n\n# Summarizing the data ---------------------------------------------------------\n# The 'summary' function\nsummary(car_data)\n# Summarize only price\nsummary(car_data$price)\n# Select our desired variables; define as car_sub\ncar_sub <- select(car_data, price, mpg, weight, length)\n# Print the dataset\ncar_sub\nselect(car_data, -price, -mpg, -weight, -length)\n# Arrange by price and mpg\narrange(car_sub, price, mpg)\ncar_sub\n# Revese the price ordering\narrange(car_sub, desc(price), mpg)\n# The 'summarize' function\nsummarize(car_sub, mean(price), sd(price))\nsummarize(car_sub, price_mean = mean(price), price_sd = sd(price))\n# Mean and standard deviation functions\nmean(car_sub$price)\nsd(car_sub$price)\n\n# Plotting the data ------------------------------------------------------------\n# Histogram\nhist(car_sub$mpg)\n# The histogram function\nhist(\n  # The variable for the histogram\n  x = car_sub$mpg,\n  # The main title\n  main = \"Distribution of fuel economy\",\n  # The x-axis label\n  xlab = \"MPG (miles per gallon)\")\n# The blue vertical line at the median MPG (lwd is line width)\nabline(v = median(car_sub$mpg), col = \"blue\", lwd = 3)\n# Scatter plot\nplot(\n  x = car_sub$mpg,\n  y = car_sub$price,\n  xlab = \"Fuel economy (MPG)\",\n  ylab = \"Price\")\n\n# Indexing ---------------------------------------------------------------------\n# Create a vector\nx <- c(3, 5, 7, 9)\n# Grab the second element of x\nx[2]\n# Grab the second and third elements of x\nx[c(2, 3)]\n# Grab the second and third elements of x\nx[2:3]\n# See what 2:3 does\n2:3\n# Indexing the car subset\ncar_sub[1, ]\ncar_sub[, 1]\n# Index using the name of a column as its index\ncar_sub[, \"price\"]\n\n\n#Linear Algebra Puzzles\n#1) Generate Identity Matrix [5x5]\nI <- matrix(0, nrow=5, ncol = 5)\nfor (i in 1:5)\n   I[i,i] <- 1\n# or \nI <- diag(5)\n# I is Idempotent\nI%*%I\n# and symmetric\nt(I)\n\n#2) Generate a 2 ×× 2 idempotent matrix X, where X is not the identity matrix.\nX <- matrix(c(3,1,-6,-2), nrow=2, ncol=2)\n#Demonstrate that X = XX. \nX%*%X\n\n#3) Generate two random variables, x and e, of dimension n = 100 such that x, e ∼ N(0, 1). \nx <- rnorm(100, mean=0., sd=1.)\ne <- rnorm(100, mean=0.0, sd=1.0)\n\n# Generate a random variable y according to the data generating process yi=xi+ei\ny <- x + e\n\n# Show that if you regress y on x using the canned linear regression routine lm(), then you \n# will get an estimate of the intercept β0β0 and the coefficient on x, β1β1, \n# such that β0=0 and β1=1.\nlm(y ~ x)\n\n# Call:\n#   lm(formula = y ~ x)\n# \n# Coefficients:\n#   (Intercept)            x  \n# 0.1719       0.9682  \n\n# Show that if λ1,λ2,…,λ5λ1,λ2,…,λ5 are the eigenvectors of a 5 ×× 5 matrix A, then tr(A) =  ∑5i=1\nA <- diag(1:5)\na <- eigen(A)\n\nsum(diag(A)) == sum(a$values) #Trace equals sum of eigenvalus\n\n",
    "created" : 1516923667878.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4204208736",
    "id" : "7D13DB28",
    "lastKnownWriteTime" : 1517072261,
    "last_content_update" : 1517072261812,
    "path" : "~/projects/are212/section/Section01/section01.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}